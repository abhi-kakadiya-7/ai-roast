// pages/api/generate-pdf.js
import chromium from "chrome-aws-lambda";
import puppeteer from "puppeteer-core";

export default async function handler(req, res) {
  if (req.method !== "POST") return res.status(405).end("Only POST allowed");

  const { roast, jokes = [], advice = [], url } = req.body;

  const html = `
    <html>
      <head>
        <meta charset="utf-8" />
        <style>
          body {
            font-family: system-ui, sans-serif;
            padding: 2rem;
            line-height: 1.6;
            color: #333;
          }
          h1, h2, h3 {
            color: #d43f00;
          }
          ul, ol {
            margin-left: 1.5rem;
          }
        </style>
      </head>
      <body>
        <h1>ðŸ”¥ Pro Roast Report</h1>
        <p><strong>Website:</strong> <a href="${url}">${url}</a></p>

        <h2>ðŸ‘€ Brutal Roast</h2>
        <p>${roast.replace(/\n/g, "<br/>")}</p>

        ${
          jokes.length > 0
            ? `
          <h3>ðŸ¤£ Roast Jokes</h3>
          <ul>${jokes.map((j) => `<li>${j}</li>`).join("")}</ul>
        `
            : ""
        }

        <h3>ðŸ›  Improvement Tips</h3>
        <ol>${advice.map((t) => `<li>${t}</li>`).join("")}</ol>

        <p style="margin-top: 3rem; font-style: italic; font-size: 14px;">
          Report generated by RoastBot.ai using LLaMA 3.3 via Groq.
        </p>
      </body>
    </html>
  `;

  const browser = await puppeteer.launch({
    args: chromium.args,
    defaultViewport: chromium.defaultViewport,
    executablePath: await chromium.executablePath,
    headless: chromium.headless,
  });

  const page = await browser.newPage();
  await page.setContent(html, { waitUntil: "networkidle0" });

  const pdfBuffer = await page.pdf({ format: "A4", printBackground: true });
  await browser.close();

  res.setHeader("Content-Type", "application/pdf");
  res.setHeader(
    "Content-Disposition",
    "attachment; filename=pro-roast-report.pdf"
  );
  res.status(200).end(pdfBuffer); // âœ… Important fix â€” use .end for binary content
}
